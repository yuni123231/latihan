/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package toko;

import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class users extends javax.swing.JFrame {

    DefaultTableModel m;
    
    public users() {
        initComponents();
        bersih();
        desainTabel();
        tampilkanData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_admin = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txt_nama = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_username = new javax.swing.JTextField();
        txt_password = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btn_hapus = new javax.swing.JButton();
        btn_simpan = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_alamat = new javax.swing.JTextArea();
        cmb_jenis = new javax.swing.JComboBox<>();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        btn_edit = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        jButton30 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        btn_transaksi2 = new javax.swing.JButton();
        btn_laporan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(220, 209, 180));

        jPanel7.setBackground(new java.awt.Color(79, 61, 26));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Admin Arti Bakery");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(188, 163, 127));
        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("User Admin");

        tbl_admin.setAutoCreateRowSorter(true);
        tbl_admin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));
        tbl_admin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "NO", "NAMA", "USERNAME", "AKSI"
            }
        ));
        tbl_admin.setGridColor(new java.awt.Color(188, 163, 127));
        tbl_admin.setSelectionBackground(new java.awt.Color(188, 163, 127));
        tbl_admin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_adminMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_admin);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nama Lengkap");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Username");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Password");

        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        btn_simpan.setBackground(new java.awt.Color(79, 61, 26));
        btn_simpan.setForeground(new java.awt.Color(255, 255, 255));
        btn_simpan.setText("Simpan");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Jenis Kelamin");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Alamat");

        txt_alamat.setColumns(20);
        txt_alamat.setRows(5);
        jScrollPane2.setViewportView(txt_alamat);

        cmb_jenis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btn_edit.setBackground(new java.awt.Color(220, 209, 180));
        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_simpan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_hapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_edit)
                        .addGap(3, 3, 3))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(43, 43, 43)))
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_username, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                                    .addComponent(txt_nama)))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_password)
                                    .addComponent(jScrollPane2)
                                    .addComponent(cmb_jenis, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(14, 14, 14))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE))
                    .addComponent(jSeparator4))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cmb_jenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_hapus)
                    .addComponent(btn_simpan)
                    .addComponent(btn_edit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(220, 209, 180));
        jPanel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), java.awt.Color.black, java.awt.Color.black));

        jButton26.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-home-18.png")); // NOI18N
        jButton26.setText("Beranda");
        jButton26.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton26.setIconTextGap(10);
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton27.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-user-25.png")); // NOI18N
        jButton27.setText("User");
        jButton27.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton27.setIconTextGap(10);
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jButton28.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-food-20.png")); // NOI18N
        jButton28.setText("Data Barang");
        jButton28.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton28.setIconTextGap(10);
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton14.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-qr-code-20.png")); // NOI18N
        jButton14.setText("Barcode");
        jButton14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton14.setIconTextGap(10);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton29.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-logout-20.png")); // NOI18N
        jButton29.setText("Logout");
        jButton29.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton29.setIconTextGap(10);
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Arti Bakery");

        jButton30.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-product-20.png")); // NOI18N
        jButton30.setText("Kategori");
        jButton30.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton30.setIconTextGap(10);
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jLabel15.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-dessert-70.png")); // NOI18N

        btn_transaksi2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-cheque-20.png")); // NOI18N
        btn_transaksi2.setText("Transaksi");
        btn_transaksi2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn_transaksi2.setIconTextGap(10);
        btn_transaksi2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_transaksi2ActionPerformed(evt);
            }
        });

        btn_laporan.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-total-sales-20.png")); // NOI18N
        btn_laporan.setText("Laporan");
        btn_laporan.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn_laporan.setIconTextGap(10);
        btn_laporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_laporanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_transaksi2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_laporan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(12, 12, 12))
                    .addComponent(jSeparator6))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(36, 36, 36))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addComponent(jButton26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_transaksi2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_laporan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
    try {
        // Gunakan PreparedStatement untuk mencegah SQL injection
            Connection connection = koneksi.getConnection();
        
            String sql = "INSERT INTO users (`nama`, `username`, `password`, `jenis_kelamin`, `alamat`) VALUES (?, ?, ?, ?, ?)";
            
            PreparedStatement preparedStatement = connection.prepareStatement(sql);

            // Set parameter pada PreparedStatement
            preparedStatement.setString(1, txt_nama.getText());
            preparedStatement.setString(2, txt_username.getText());
            preparedStatement.setString(3, txt_password.getText());
            preparedStatement.setString(4, cmb_jenis.getSelectedItem().toString());
            preparedStatement.setString(5, txt_alamat.getText());

            // Jalankan pernyataan SQL INSERT
            int rowsAffected = preparedStatement.executeUpdate();

            if (rowsAffected > 0) {
                // Kosongkan model tabel
                DefaultTableModel model = (DefaultTableModel) tbl_admin.getModel();
                model.setRowCount(0);

                // Ambil data dari database
                Statement statement = connection.createStatement();
                ResultSet resultSet = statement.executeQuery("SELECT * FROM users");

                // Tambahkan data ke model tabel
                while (resultSet.next()) {
                    String nama_lengkap = resultSet.getString("nama");
                    String username = resultSet.getString("username");
                    String password = resultSet.getString("password");
                    String jenis_kelamin = resultSet.getString("jenis_kelamin");
                    String alamat = resultSet.getString("alamat");

                    Object[] data = {nama_lengkap, username, password, jenis_kelamin, alamat};
                    model.addRow(data);
                }

                // Update UI
                model.fireTableDataChanged();
                
                // Bersihkan input setelah penyimpanan berhasil
            txt_nama.setText("");
            txt_username.setText("");
            txt_password.setText("");
            cmb_jenis.setSelectedIndex(0); // Atur indeks kembali ke opsi pertama (jika Anda memiliki opsi kosong, sesuaikan dengan indeksnya)
            txt_alamat.setText("");

                JOptionPane.showMessageDialog(null, "Data berhasil disimpan ke database");
            } else {
                JOptionPane.showMessageDialog(null, "Gagal menyimpan data ke database");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
    }
        
//    btnSimpanActionPerformed(evt);
//      updateDataDariDatabase();
    }//GEN-LAST:event_btn_simpanActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        home h = new home();
        h.setExtendedState(JFrame.MAXIMIZED_BOTH);
        h.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        users u = new users();
        u.setExtendedState(JFrame.MAXIMIZED_BOTH);
        u.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        barang b = new barang();
        b.setExtendedState(JFrame.MAXIMIZED_BOTH);
        b.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        Barcode b = new Barcode();
        b.setExtendedState(JFrame.MAXIMIZED_BOTH);
        b.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        boolean isLoggedIn = false;

        // Tampilkan pesan logout
        int konfirmasi = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin keluar dari aplikasi?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (konfirmasi == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(this, "Anda berhasil logout.");
        }
        //        JOptionPane.showMessageDialog(this, "Anda berhasil logout.");

        // Tutup frame halaman login
        dispose();

        // Buka frame login

        showLoginForm();
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        kategori k = new kategori();
        k.setExtendedState(JFrame.MAXIMIZED_BOTH);
        k.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton30ActionPerformed

    private void btn_transaksi2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_transaksi2ActionPerformed
        transaksi t = new transaksi();
        t.setExtendedState(JFrame.MAXIMIZED_BOTH);
        t.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_transaksi2ActionPerformed

    private void btn_laporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_laporanActionPerformed
        laporan l = new laporan();
        l.setExtendedState(JFrame.MAXIMIZED_BOTH);
        l.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_laporanActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        hapusDataTerpilih();
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        editDataTerpilih();
//          btnSimpanActionPerformed(evt);
    }//GEN-LAST:event_btn_editActionPerformed

    private void tbl_adminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_adminMouseClicked
        tabelMouseClicked(evt);
    }//GEN-LAST:event_tbl_adminMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new users().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_laporan;
    private javax.swing.JButton btn_simpan;
    private javax.swing.JButton btn_transaksi2;
    private javax.swing.JComboBox<String> cmb_jenis;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton30;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTable tbl_admin;
    private javax.swing.JTextArea txt_alamat;
    private javax.swing.JTextField txt_nama;
    private javax.swing.JTextField txt_password;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables

    private void tampilkanData() {
        try {
        Connection connection = koneksi.getConnection();
        DefaultTableModel model = (DefaultTableModel) tbl_admin.getModel();

        // Kosongkan model tabel
        model.setRowCount(0);

        // Ambil data dari database
        Statement statement = connection.createStatement();
        ResultSet resultSet = statement.executeQuery("SELECT * FROM users");

        // Tambahkan data ke model tabel
        int no = 1;
        while (resultSet.next()) {
            String nama = resultSet.getString("nama");
            String username = resultSet.getString("username");
            String password = resultSet.getString("password");
            String jenisKelamin = resultSet.getString("jenis_kelamin");
            String alamat = resultSet.getString("alamat");

            Object[] data = {nama, username, password, jenisKelamin, alamat};
            model.addRow(data);
        }

        // Update UI
        model.fireTableDataChanged();

        // Tutup sumber daya
        resultSet.close();
        statement.close();
        connection.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    }
    }

    private void bersih() {
        cmb_jenis.removeAllItems();
        cmb_jenis.addItem("Perempuan");
        cmb_jenis.addItem("Laki-laki");
    }
    
    private void desainTabel() {
        Object[] kolom = {"NAMA" ,"USERNAME", "PASSWORD", "JENIS KELAMIN", "ALAMAT"};
        Object[][] data = null;
        m = new DefaultTableModel(data, kolom);
        tbl_admin.setModel(m);
    }

    private void showLoginForm() {
       Login loginFrame = new Login();
        loginFrame.setVisible(true);
    }

    private int barisYangAkanDihapus = -1; // tambahkan variabel untuk menyimpan indeks baris yang akan dihapus

    private void hapusDataTerpilih() {
        // Dapatkan indeks baris yang dipilih
        int barisTerpilih = tbl_admin.getSelectedRow();

        // Periksa apakah baris terpilih
        if (barisTerpilih == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            // Simpan indeks baris yang akan dihapus
            barisYangAkanDihapus = barisTerpilih;

            // Dapatkan data dari baris terpilih
            String nama = tbl_admin.getValueAt(barisTerpilih, 0).toString(); // Gantilah dengan indeks kolom yang sesuai

            // Konfirmasi penghapusan
            int konfirmasi = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if (konfirmasi == JOptionPane.YES_OPTION) {
                // Panggil metode untuk menghapus data dari database (sesuai dengan implementasi Anda)
                boolean berhasil = hapusDataDariDatabase(nama);

                // Periksa apakah penghapusan berhasil
                if (berhasil) {
                    // Hapus baris dari model tabel
                    DefaultTableModel model = (DefaultTableModel) tbl_admin.getModel();
                    model.removeRow(barisTerpilih);
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menghapus data.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }

    // Metode untuk menyimpan data setelah diedit
    private void simpanData() {
        // Dapatkan data yang sudah diedit dari tabel atau komponen lainnya
        // Simpan data ke database (sesuai dengan implementasi Anda)

        // Setelah penyimpanan selesai, hapus data yang sudah diedit dari tabel
        DefaultTableModel model = (DefaultTableModel) tbl_admin.getModel();
        model.removeRow(barisYangAkanDihapus);

        // Reset indeks baris yang akan dihapus
        barisYangAkanDihapus = -1;
    }


    private boolean hapusDataDariDatabase(String nama) {
        boolean berhasil = false;
        Connection connection = null;

        try {
            // Inisialisasi objek koneksi di sini
            connection = koneksi.getConnection();

            // Menyiapkan pernyataan SQL untuk menghapus data
            String query = "DELETE FROM users WHERE nama = ?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setString(1, nama);

                // Mengeksekusi pernyataan SQL
                int rowCount = preparedStatement.executeUpdate();
                if (rowCount > 0) {
                    berhasil = true;
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error dalam menghapus data dari database.", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Tutup koneksi di blok finally
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }

        return berhasil;
    }

private void editDataTerpilih() {
    // Dapatkan indeks baris yang dipilih
    int barisTerpilih = tbl_admin.getSelectedRow();

    // Periksa apakah baris terpilih
    if (barisTerpilih == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diedit.", "Peringatan", JOptionPane.WARNING_MESSAGE);
    } else {
        // Dapatkan data dari baris terpilih
        String Nama = tbl_admin.getValueAt(barisTerpilih, 0).toString();
        String Username = tbl_admin.getValueAt(barisTerpilih, 1).toString();
        String Password = tbl_admin.getValueAt(barisTerpilih, 2).toString();
        String JenisKelamin = tbl_admin.getValueAt(barisTerpilih, 3).toString(); // Pastikan ini adalah nama kolom yang benar
        String Alamat = tbl_admin.getValueAt(barisTerpilih, 4).toString();

        // Gunakan data untuk mengisi form pengisian data baru
        txt_nama.setText(Nama);
        txt_username.setText(Username);
        txt_password.setText(Password);
        cmb_jenis.setSelectedItem(JenisKelamin);
        txt_alamat.setText(Alamat);
    }
}


    private boolean editDataDiDatabase(String nama, String username, String newPassword, String jenis_kelamin, String alamat) {
        boolean berhasil = false;
        Connection connection = null;

        try {
            // Inisialisasi objek koneksi di sini
            connection = koneksi.getConnection();

            // Menyiapkan pernyataan SQL untuk mengupdate data
            String query = "UPDATE users SET nama = ?, username = ?, password = ?, jenis_kelamin = ? WHERE alamat = ?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setString(1, nama);
                preparedStatement.setString(2, username);
                preparedStatement.setString(3, newPassword);
                preparedStatement.setString(4, jenis_kelamin);
                preparedStatement.setString(5, alamat);

                // Mengeksekusi pernyataan SQL
                int rowCount = preparedStatement.executeUpdate();
                if (rowCount > 0) {
                    berhasil = true;
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error dalam mengedit data di database.", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Tutup koneksi di blok finally
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }

        return berhasil;
    }

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {
        int barisTerpilih = tbl_admin.getSelectedRow();

        // Periksa apakah baris terpilih
        if (barisTerpilih != -1) {
            // Dapatkan data dari baris terpilih
            String username = tbl_admin.getValueAt(barisTerpilih, 0).toString();
            String password = tbl_admin.getValueAt(barisTerpilih, 1).toString();
            // Dapatkan data lain sesuai dengan kolom yang ada

            // Tampilkan data di komponen input/form untuk pengeditan
            txt_username.setText(username);
            txt_password.setText(password);
            // Tampilkan data lain sesuai dengan komponen yang ada
        }
    }

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {
        // Dapatkan data dari komponen input/form
        String nama = txt_nama.getText();
        String username = txt_username.getText();
        String newPassword = txt_password.getText();
        String jenis_kelamin = cmb_jenis.getSelectedItem().toString();
        String alamat = txt_alamat.getText();
        // Dapatkan data lain sesuai dengan komponen yang ada

        // Panggil metode untuk menyimpan perubahan ke database
        boolean berhasil = editDataDiDatabase(nama, username, newPassword, jenis_kelamin, alamat);

        // Periksa apakah penyimpanan berhasil
        if (berhasil) {
            // Update data di model tabel
            DefaultTableModel model = (DefaultTableModel) tbl_admin.getModel();
            int barisTerpilih = tbl_admin.getSelectedRow();
            model.setValueAt(newPassword, barisTerpilih, 1); // Gantilah dengan indeks kolom yang sesuai
            JOptionPane.showMessageDialog(this, "Data berhasil disimpan.", "Informasi", JOptionPane.INFORMATION_MESSAGE);

            // Kosongkan komponen input/form setelah penyimpanan
            txt_username.setText("");
            txt_password.setText("");
//            cmb_jenis.setText("");
            // Kosongkan data lain sesuai dengan komponen yang ada
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void updateDataDariDatabase() {
        // Kode untuk memperbarui data ke database
        try (Connection connection = koneksi.getConnection()) {
            String username = txt_username.getText();
            String password = txt_password.getText();
            String nama = txt_nama.getText();
            String jenisKelamin = cmb_jenis.getSelectedItem().toString();
            String alamat = txt_alamat.getText();

            String query = "UPDATE users SET nama = ?, username = ?, password = ?, jenis_kelamin = ? WHERE alamat = ?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setString(1, nama);
                preparedStatement.setString(2, username);
                preparedStatement.setString(3, password);
                preparedStatement.setString(4, jenisKelamin);
                preparedStatement.setString(5, alamat);

                int rowCount = preparedStatement.executeUpdate();
                if (rowCount > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil diperbarui.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                    // Setelah data berhasil diperbarui, panggil resetForm
                    resetForm();
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal memperbarui data.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengakses database.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void resetForm() {
        txt_username.setText("");
        txt_password.setText("");
        txt_nama.setText("");
        cmb_jenis.setSelectedItem(null);
        txt_alamat.setText("");
    }

}
