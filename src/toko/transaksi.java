/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package toko;

import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.text.DecimalFormat;
import java.util.HashMap;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperReport;
import java.sql.DriverManager;


public class transaksi extends javax.swing.JFrame {
    DefaultTableModel m;
//    private Connection connection;
    
    private double totalBelanja = 0.0;

    
    public transaksi() {
        initComponents();
        
        desaintabel();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jButton20 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btn_transaksi = new javax.swing.JButton();
        btn_laporan = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txt_barcode = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_barang = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        txt_idTransaksi = new javax.swing.JTextField();
        txt_kode = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txt_nama = new javax.swing.JTextField();
        txt_qty = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txt_harga = new javax.swing.JTextField();
        tanggal = new com.toedter.calendar.JDateChooser();
        txt_total = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_bayar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_kembalian = new javax.swing.JTextField();
        btn_bayar = new javax.swing.JButton();
        btn_tambah = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(220, 209, 180));

        jPanel5.setBackground(new java.awt.Color(79, 61, 26));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Admin Arti Bakery");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel9.setBackground(new java.awt.Color(220, 209, 180));
        jPanel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), java.awt.Color.black, java.awt.Color.black));

        jButton16.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-home-18.png")); // NOI18N
        jButton16.setText("Beranda");
        jButton16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton16.setIconTextGap(10);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-user-25.png")); // NOI18N
        jButton17.setText("User");
        jButton17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton17.setIconTextGap(10);
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-food-20.png")); // NOI18N
        jButton18.setText("Data Barang");
        jButton18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton18.setIconTextGap(10);
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton12.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-qr-code-20.png")); // NOI18N
        jButton12.setText("Barcode");
        jButton12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton12.setIconTextGap(10);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton19.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-logout-20.png")); // NOI18N
        jButton19.setText("Logout");
        jButton19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton19.setIconTextGap(10);
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Arti Bakery");

        jButton20.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-product-20.png")); // NOI18N
        jButton20.setText("Kategori");
        jButton20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton20.setIconTextGap(10);
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-dessert-70.png")); // NOI18N

        btn_transaksi.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-cheque-20.png")); // NOI18N
        btn_transaksi.setText("Transaksi");
        btn_transaksi.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn_transaksi.setIconTextGap(10);
        btn_transaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_transaksiActionPerformed(evt);
            }
        });

        btn_laporan.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lenovo\\Downloads\\icons8-total-sales-20.png")); // NOI18N
        btn_laporan.setText("Laporan");
        btn_laporan.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn_laporan.setIconTextGap(10);
        btn_laporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_laporanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_transaksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_laporan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(12, 12, 12))
                    .addComponent(jSeparator2))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(36, 36, 36))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jButton16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_transaksi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_laporan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(188, 163, 127));
        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        jPanel2.setBackground(new java.awt.Color(188, 163, 127));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        jPanel4.setBackground(new java.awt.Color(79, 61, 26));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Cari Barang");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txt_barcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_barcodeActionPerformed(evt);
            }
        });
        txt_barcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_barcodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_barcodeKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Search :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(txt_barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_barcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(188, 163, 127));
        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        tbl_barang.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));
        tbl_barang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id Transaksi", "Tanggal", "Nama Barang", "Qty", "Harga"
            }
        ));
        tbl_barang.setSelectionBackground(new java.awt.Color(78, 61, 26));
        tbl_barang.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tbl_barang);

        jPanel10.setBackground(new java.awt.Color(79, 61, 26));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("TRANSAKSI");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addContainerGap())
        );

        jLabel5.setText("Kode Transaksi :");

        txt_idTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_idTransaksiActionPerformed(evt);
            }
        });

        txt_kode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_kodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_kodeFocusLost(evt);
            }
        });

        jLabel12.setText("Kode Barang :");
        jLabel12.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jLabel12FocusLost(evt);
            }
        });

        jLabel14.setText("Tanggal :");

        jLabel16.setText("Nama Barang :");

        jLabel17.setText("Qty :");

        jLabel15.setText("Harga Satuan :");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel5)
                            .addComponent(jLabel16))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_idTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_kode, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addGap(10, 10, 10)
                                        .addComponent(txt_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(txt_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_harga, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(13, 13, 13)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txt_idTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14))
                    .addComponent(tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(txt_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txt_kode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(txt_harga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(txt_nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("TOTAL :");

        jLabel2.setText("Bayar :");

        txt_bayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_bayarActionPerformed(evt);
            }
        });

        jLabel3.setText("Kembali :");

        btn_bayar.setBackground(new java.awt.Color(79, 61, 26));
        btn_bayar.setForeground(new java.awt.Color(255, 255, 255));
        btn_bayar.setText("Bayar Sekarang");
        btn_bayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bayarActionPerformed(evt);
            }
        });

        btn_tambah.setBackground(new java.awt.Color(79, 61, 26));
        btn_tambah.setForeground(new java.awt.Color(255, 255, 255));
        btn_tambah.setText("+ Tambah");
        btn_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tambahActionPerformed(evt);
            }
        });

        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(btn_tambah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_hapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1))
                                    .addGap(25, 25, 25)
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txt_bayar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(txt_kembalian, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_bayar)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_hapus)
                        .addComponent(btn_tambah))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_bayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_kembalian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addGap(9, 9, 9)
                .addComponent(btn_bayar)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        home h = new home();
        h.setExtendedState(JFrame.MAXIMIZED_BOTH);
        h.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        users u = new users();
        u.setExtendedState(JFrame.MAXIMIZED_BOTH);
        u.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        barang b = new barang();
        b.setExtendedState(JFrame.MAXIMIZED_BOTH);
        b.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        Barcode b = new Barcode();
        b.setExtendedState(JFrame.MAXIMIZED_BOTH);
        b.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        boolean isLoggedIn = false;

        // Tampilkan pesan logout
        int konfirmasi = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin keluar dari aplikasi?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (konfirmasi == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(this, "Anda berhasil logout.");
        }
        //        JOptionPane.showMessageDialog(this, "Anda berhasil logout.");

        // Tutup frame halaman login
        dispose();

        // Buka frame login

        showLoginForm();
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        kategori k = new kategori();
        k.setExtendedState(JFrame.MAXIMIZED_BOTH);
        k.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton20ActionPerformed

    private void btn_transaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_transaksiActionPerformed
        transaksi t = new transaksi();
        t.setExtendedState(JFrame.MAXIMIZED_BOTH);
        t.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_transaksiActionPerformed

    private void btn_laporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_laporanActionPerformed
        laporan l = new laporan();
        l.setExtendedState(JFrame.MAXIMIZED_BOTH);
        l.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_laporanActionPerformed

    private void btn_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tambahActionPerformed
        tambahBarangKeTabel();
    }//GEN-LAST:event_btn_tambahActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        int barisTerpilih = tbl_barang.getSelectedRow();

        if (barisTerpilih == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            DefaultTableModel model = (DefaultTableModel) tbl_barang.getModel();
            String kodeBarang = model.getValueAt(barisTerpilih, 2).toString(); // Ambil nilai kode_barang dari baris terpilih

            // Hapus data dari tabel transaksi
            if (hapusDataTransaksi(kodeBarang)) {
                // Hapus baris dari tampilan tabel
                model.removeRow(barisTerpilih);
                JOptionPane.showMessageDialog(this, "Data berhasil dihapus.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menghapus data.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private boolean hapusDataTransaksi(String kodeBarang) {
        boolean berhasil = false;

        try (Connection connection = koneksi.getConnection()) {
            String query = "DELETE FROM transaksi WHERE kode_barang = ?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setString(1, kodeBarang);

                int affectedRows = preparedStatement.executeUpdate();

                if (affectedRows > 0) {
                    berhasil = true;
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengakses database.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }

        return berhasil;
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void txt_idTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_idTransaksiActionPerformed
        try {
            String idPenjualan = "SELECT kode_transaksi FROM transaksi;";
            PreparedStatement ps = koneksi.getConnection().prepareStatement(idPenjualan);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                int idJual = rs.getInt(1);
                txt_idTransaksi.setText(Integer.toString(idJual + 1));
                txt_idTransaksi.setEditable(false);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "di cek Kembali " + e + "");
        }
    }//GEN-LAST:event_txt_idTransaksiActionPerformed

    private void txt_kodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_kodeFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_kodeFocusGained

    private void jLabel12FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jLabel12FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel12FocusLost

    private void txt_kodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_kodeFocusLost
//        String kodeBarang = txt_kode.getText();
//        String namaBarang = cariNamaBarangDariDatabase(kodeBarang);
//        txt_nama.setText(namaBarang);

        updateInfo();

        // Jika ingin mengisi harga total berdasarkan jumlah barang dan harga satuan,
        // tambahkan logika berikut:
        // double hargaSatuan = Double.parseDouble(txt_harga.getText());
        // int qty = Integer.parseInt(txt_qty.getText());
        // double totalHarga = hargaSatuan * qty;
        // txt_hargaTotal.setText(String.valueOf(totalHarga));
    }//GEN-LAST:event_txt_kodeFocusLost

    private void txt_barcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_barcodeKeyPressed
//        String Barcode  = txt_barcode.getText();
//
//        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            JOptionPane.showMessageDialog(this, "Barcode berhasil" + Barcode);
//            handleBarcodeScan(txt_barcode.getText());
//        }else{
//            String kode_barang = Barcode;
//            //            cariDanTampilkanData(kode_barang);
//        }


    }//GEN-LAST:event_txt_barcodeKeyPressed

    private void txt_barcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_barcodeActionPerformed
//        cariData();
        cariInformasiBarang();
    }//GEN-LAST:event_txt_barcodeActionPerformed

    private void txt_bayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_bayarActionPerformed
    
    }//GEN-LAST:event_txt_bayarActionPerformed

    private void btn_bayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bayarActionPerformed
 try {
        // Ambil total harga dari JTextField
        String totalHargaStr = txt_total.getText();
        if (totalHargaStr.isEmpty()) {
            // Handle kasus input kosong
            JOptionPane.showMessageDialog(this, "Total Harga tidak boleh kosong.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        double totalHarga = Double.parseDouble(totalHargaStr);

        // Ambil jumlah bayar dari JTextField
        String jumlahBayarStr = txt_bayar.getText();
        if (jumlahBayarStr.isEmpty()) {
            // Handle kasus input kosong
            JOptionPane.showMessageDialog(this, "Jumlah Bayar tidak boleh kosong.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        double jumlahBayar = Double.parseDouble(jumlahBayarStr);

        // Hitung kembalian
        double kembalian = hitungKembalian(totalHarga, jumlahBayar);

        // Tampilkan kembalian di JTextField
        txt_kembalian.setText(String.valueOf(kembalian));
    } catch (NumberFormatException e) {
        // Tangani kesalahan konversi
        JOptionPane.showMessageDialog(this, "Masukkan angka yang valid.", "Peringatan", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_btn_bayarActionPerformed

    private void txt_barcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_barcodeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_barcodeKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_bayar;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_laporan;
    private javax.swing.JButton btn_tambah;
    private javax.swing.JButton btn_transaksi;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton20;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private com.toedter.calendar.JDateChooser tanggal;
    private javax.swing.JTable tbl_barang;
    private javax.swing.JTextField txt_barcode;
    private javax.swing.JTextField txt_bayar;
    private javax.swing.JTextField txt_harga;
    private javax.swing.JTextField txt_idTransaksi;
    private javax.swing.JTextField txt_kembalian;
    private javax.swing.JTextField txt_kode;
    private javax.swing.JTextField txt_nama;
    private javax.swing.JTextField txt_qty;
    private javax.swing.JTextField txt_total;
    // End of variables declaration//GEN-END:variables

    private void showLoginForm() {
        Login loginFrame = new Login();
        loginFrame.setVisible(true);
    }
    
    private void handleBarcodeScan(String barcode) {
        DefaultTableModel model = (DefaultTableModel) tbl_barang.getModel();
//        DefaultTableModel model = new DefaultTableModel();
        model.setRowCount(0);
        try {
            Connection connection = koneksi.getConnection();
            String query = "SELECT t.id_transaksi, t.tanggal_transaksi, b.kode_barang, t.jumlah_barang, t.harga_total " +
                       "FROM transaksi t " +
                       "JOIN barang b ON t.kode_barang = b.kode_barang";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setString(1, barcode);
                ResultSet resultSet = preparedStatement.executeQuery();

                if (resultSet.next()) {
                    String namaBarang = resultSet.getString("nama_barang");
                    int stok = resultSet.getInt("stok");
                    double harga = resultSet.getDouble("harga");

                    // Tambahkan hasil pemindaian ke dalam model tabel
                    Object[] data = {barcode, namaBarang, stok, harga};
                    model.addRow(data);
                } else {
                    JOptionPane.showMessageDialog(this, "Barang dengan barcode " + barcode + " tidak ditemukan.");
                }
                System.out.println("Number of rows retrieved: " + model.getRowCount());

                tbl_barang.setModel(model);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error dalam mengakses database.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }

        // Bersihkan JTextField setelah pemindaian
        txt_barcode.setText("");
    }

////    public void handleBarcodeScanPanel(String barcode) {
////        try {
////            String query = "SELECT b.nama_barang " +
////                           "FROM barcode bc " +
////                           "JOIN barang b ON bc.kode_barang = b.kode_barang " +
////                           "WHERE bc.barcode_value = ?";
////            Connection connection = koneksi.getConnection();
////            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
////                preparedStatement.setString(1, barcode);
////                ResultSet resultSet = preparedStatement.executeQuery();
////
////                if (resultSet.next()) {
////                    String namaBarang = resultSet.getString("nama_barang");
////
////                    // Tampilkan informasi nama barang di dalam panel
////                    jPanel3.removeAll();
////                    jPanel3.add(new JLabel("Nama Barang: " + namaBarang));
////                    jPanel3.revalidate();
////                } else {
////                    JOptionPane.showMessageDialog(this, "Barang dengan barcode " + barcode + " tidak ditemukan.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
////                }
////            }
////        } catch (SQLException e) {
////            e.printStackTrace();
////            JOptionPane.showMessageDialog(this, "Error dalam mengakses database.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
////        }
//
//        // Bersihkan JTextField setelah pemindaian
//        txt_barcode.setText("");
//    }

    private void desaintabel() {
        Object[] kolom = {"Kode Transaksi", "Tanggal Transaksi", "Kode Barang", "Nama Barang", "Jumlah Barang", "Harga"};
        Object[][] data = null;
        m = new DefaultTableModel(data, kolom);
        tbl_barang.setModel(m);
    }

    private void refreshTable() {
        m.setRowCount(0);

        try {
            Connection connection = koneksi.getConnection();
            String query = "SELECT t.id_transaksi, t.tanggal_transaksi, b.kode_barang, b.nama_barang, t.jumlah_barang, t.harga_satuan, t.harga_total " +
                       "FROM transaksi t " +
                       "JOIN barang b ON t.kode_barang = b.kode_barang";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query);
                 ResultSet resultSet = preparedStatement.executeQuery()) {

                while (resultSet.next()) {
                    Object[] rowData = {
                            resultSet.getInt("id_transaksi"),
                            resultSet.getDate("tanggal_transaksi"),
                            resultSet.getString("kode_barang"),
                            resultSet.getString("nama_barang"),
                            resultSet.getInt("jumlah_barang"),
                            resultSet.getBigDecimal("harga_satuan"),
                            resultSet.getBigDecimal("harga_total")
                    };
                    m.addRow(rowData);
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error dalam mengambil data transaksi.", "Error", JOptionPane.ERROR_MESSAGE);
        }
}

//private void cariDanTampilkanData(String kodeBarang) {
//        m.setRowCount(0);
//
//        try (Connection connection = koneksi.getConnection()){
//            String query = "SELECT * FROM barang WHERE kode_barang = ?";
//            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
//                preparedStatement.setString(1, kodeBarang);
//                ResultSet resultSet = preparedStatement.executeQuery();
//
//                if (resultSet.next()) {
//                    String kodeBarang = resultSet.getString("kode_barang");
//                    String namaBarang = resultSet.getString("nama_barang");
//                    BigDecimal hargaSatuan = resultSet.getBigDecimal("harga_jual");
//
//                    int jumlah = Integer.parseInt(txt_jumlah.getText());
//
//                    // Menambahkan transaksi ke dalam tabel
//                    String queryTransaksi = "INSERT INTO transaksi (id_transaksi, tanggal_transaksi, kode_barang, nama_barang, jumlah_barang, harga_total) VALUES (?, ?, ?, ?, ?, ?)";
//                    try (PreparedStatement preparedStatementTransaksi = connection.prepareStatement(queryTransaksi)) {
//                        preparedStatementTransaksi.setDate(1, new java.sql.Date(System.currentTimeMillis()));
//                        preparedStatementTransaksi.setString(2, kodeBarang);
//                        preparedStatementTransaksi.setString(3, namaBarang);
//                        preparedStatementTransaksi.setInt(4, jumlah);
//                        preparedStatementTransaksi.setBigDecimal(5, hargaSatuan);
//                        preparedStatementTransaksi.setBigDecimal(6, hargaSatuan.multiply(BigDecimal.valueOf(jumlah)));
//
//                        int affectedRows = preparedStatementTransaksi.executeUpdate();
//
//                        if (affectedRows > 0) {
//                            JOptionPane.showMessageDialog(this, "Transaksi berhasil ditambahkan.");
//                            refreshTable();
//                            kurangiStokBarang(kodeBarang, jumlah);
//                        } else {
//                            JOptionPane.showMessageDialog(this, "Gagal menambahkan transaksi.", "Error", JOptionPane.ERROR_MESSAGE);
//                        }
//                    }
//                } else {
//                    JOptionPane.showMessageDialog(this, "Barang dengan barcode " + kodeBarang + " tidak ditemukan.", "Error", JOptionPane.ERROR_MESSAGE);
//                }
//            }
//        } catch (SQLException ex) {
//            ex.printStackTrace();
//            JOptionPane.showMessageDialog(this, "Error dalam menambahkan transaksi.", "Error", JOptionPane.ERROR_MESSAGE);
//        }
//
//        // Bersihkan JTextField setelah pemindaian
//        txt_barcode.setText("");
//        
//    }
    
    

    private void tambahBarangKeTabel() {    
        
    // Mendapatkan data barang dari JTextField
    String IdTransaksi = txt_idTransaksi.getText();
    Date selectedDate = tanggal.getDate();
    String kodeBarang = txt_kode.getText();
    String namaBarang = cariNamaBarangDariDatabase(kodeBarang);
    double hargaBarang = Double.parseDouble(txt_harga.getText());
    int qty = Integer.parseInt(txt_qty.getText());
    double totalHarga = hargaBarang * qty;
    
     // Format tanggal ke dalam string sesuai dengan format yang diterima oleh database
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String tanggalFormatted = dateFormat.format(selectedDate);

    // Menyimpan data barang ke dalam tabel transaksi
    if (simpanTransaksi(IdTransaksi, tanggalFormatted, kodeBarang, namaBarang, String.valueOf(qty), totalHarga)) {
        // Mengurangkan stok barang di tabel barang
        if (kurangiStokBarang(kodeBarang, qty)) {
            // Menambahkan data barang ke dalam tabel transaksi
            Object[] rowData = {IdTransaksi, tanggalFormatted, kodeBarang, namaBarang, String.valueOf(qty), totalHarga};
            m.addRow(rowData);

            // Membersihkan input setelah ditambahkan ke tabel
            txt_idTransaksi.setText("");
            tanggal.setDate(null); 
            txt_kode.setText("");
            txt_nama.setText("");
            txt_qty.setText("");
            txt_harga.setText("");
            
            hitungTotalHarga();
//            isiJumlahBayar();
        } else {
            JOptionPane.showMessageDialog(this, "Gagal mengurangkan stok barang.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Gagal menyimpan transaksi ke database.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    private boolean kurangiStokBarang(String kodeBarang, int qty) {
    Connection connection = null;
    boolean berhasil = false;

    try {
        connection = koneksi.getConnection();

        // Menyiapkan pernyataan SQL untuk mengurangkan stok barang
        String query = "UPDATE barang SET stok = stok - ? WHERE kode_barang = ?";
        try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            preparedStatement.setInt(1, qty);
            preparedStatement.setString(2, kodeBarang);

            // Mengeksekusi pernyataan SQL
            int rowCount = preparedStatement.executeUpdate();
            if (rowCount > 0) {
                berhasil = true;
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error dalam mengurangkan stok barang.", "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        if (connection != null) {
            try {
                connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    return berhasil;
}

    private boolean simpanTransaksi(String IdTransaksi, String Tanggal, String kodeBarang, String namaBarang, String Qty, double hargaBarang) {
        boolean berhasil = false;
        Connection connection = null;
        

        try {
            // Inisialisasi objek koneksi di sini
            connection = koneksi.getConnection();

            // Menyiapkan pernyataan SQL untuk menyimpan data transaksi
            String query = "INSERT INTO transaksi (kode_transaksi, tanggal_transaksi, kode_barang, nama_barang, jumlah_barang, harga_total) VALUES (?, ?, ?, ?, ?, ?)";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setString(1, IdTransaksi);
                preparedStatement.setString(2, Tanggal);
                preparedStatement.setString(3, kodeBarang);
                preparedStatement.setString(4, namaBarang);
                preparedStatement.setString(5, Qty);
                preparedStatement.setDouble(6, hargaBarang);

                // Mengeksekusi pernyataan SQL
                int rowCount = preparedStatement.executeUpdate();
                if (rowCount > 0) {
                    berhasil = true;
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error dalam menyimpan transaksi ke database.", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }

        return berhasil;
    }

    private String cariNamaBarangDariDatabase(String kodeBarang) {
        String namaBarang = "Nama Barang dari Database";
        Connection connection = null;
        try {
        // Inisialisasi objek koneksi di sini
        connection = koneksi.getConnection();

        // Membuat pernyataan SQL untuk mencari nama barang berdasarkan kode barang
        String query = "SELECT nama_barang FROM barang WHERE kode_barang = ?";
        try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            preparedStatement.setString(1, kodeBarang);

            // Mengeksekusi kueri dan mendapatkan hasil
            ResultSet resultSet = preparedStatement.executeQuery();
            if (resultSet.next()) {
                // Jika data ditemukan, ambil nama barang
                namaBarang = resultSet.getString("nama_barang");
            }
        }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error dalam mengakses database.", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }

        return namaBarang;
    }

    private void cariData() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Id Transaksi");
        model.addColumn("Kode Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Tanggal");
        model.addColumn("Qty");
        model.addColumn("Harga");

        try {
            Connection connection = koneksi.getConnection();
            // Gunakan PreparedStatement untuk menghindari SQL Injection
            String sql = "SELECT * FROM transaksi WHERE kode_barang LIKE ? OR nama_barang LIKE ?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                // Set parameter pada PreparedStatement
                preparedStatement.setString(1, "%" + txt_barcode.getText() + "%");
                preparedStatement.setString(2, "%" + txt_barcode.getText() + "%");

                ResultSet rs = preparedStatement.executeQuery();

                while (rs.next()) {
                    model.addRow(new Object[]{
                            rs.getString(1),
                            rs.getString(2),
                            rs.getString(3),
                            rs.getString(4),
                            rs.getString(5),
                            rs.getString(6)
                    });
                }
            }
            tbl_barang.setModel(model);
        } catch (SQLException e) {
            e.printStackTrace(); // Ganti ini dengan penanganan kesalahan yang sesuai
        }
    }


    private void loadData() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private void hitungTotalHarga() {
    DefaultTableModel model = (DefaultTableModel) tbl_barang.getModel();
    int rowCount = model.getRowCount();

    double totalHarga = 0;

    for (int i = 0; i < rowCount; i++) {
        // Ambil nilai total harga dari kolom "Harga Total" di setiap baris
        double hargaBaris = Double.parseDouble(model.getValueAt(i, 5).toString());
        totalHarga += hargaBaris;
    }

    // Set nilai total harga ke dalam JTextField
    txt_total.setText(String.valueOf(totalHarga));
}

//    private void isiJumlahBayar() {
//        // Anda dapat menyesuaikan logika ini sesuai dengan kebutuhan aplikasi Anda
//        // Sebagai contoh, mengisi setengah dari total harga ke dalam JTextField
//        double jumlahBayar = totalHarga / 2;
//        txt_bayar.setText(String.valueOf(jumlahBayar));
//}

    private void updateInfo() {
        // Mendapatkan data barang dari JTextField
        String kodeBarang = txt_kode.getText();

        // Memeriksa apakah kode barang tidak kosong
        if (!kodeBarang.isEmpty()) {
            // Mencari dan menetapkan informasi barang dari database
            String[] infoBarang = cariNamaDanHargaBarangDariDatabase(kodeBarang);

            // Memeriksa apakah data ditemukan
            if (infoBarang != null) {
                txt_nama.setText(infoBarang[0]); // Nama barang
                txt_harga.setText(infoBarang[1]); // Harga satuan
            } else {
                // Mengosongkan nama dan harga jika data tidak ditemukan
                txt_nama.setText("");
                txt_harga.setText("");
            }
        } else {
            // Mengosongkan nama dan harga jika kode barang kosong
            txt_nama.setText("");
            txt_harga.setText("");
        }
    }

    private String[] cariNamaDanHargaBarangDariDatabase(String kodeBarang) {
        // Lakukan koneksi ke database dan eksekusi query
        try (Connection connection = koneksi.getConnection()) {
            String query = "SELECT nama_barang, harga_jual FROM barang WHERE kode_barang = ?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setString(1, kodeBarang);

                ResultSet resultSet = preparedStatement.executeQuery();

                if (resultSet.next()) {
                    return new String[]{resultSet.getString("nama_barang"), resultSet.getString("harga_jual")};
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }

    private double hitungKembalian(double totalHarga, double jumlahBayar) {
        return jumlahBayar - totalHarga;
    }

    private void cariInformasiBarang() {
    String barcode = txt_barcode.getText().trim();

    if (!barcode.isEmpty()) {
        // Panggil metode yang telah diimplementasikan sebelumnya untuk mencari informasi barang
        String[] informasiBarang = cariInformasiBarangDariDatabase(barcode);

        if (informasiBarang != null) {
            // Tampilkan informasi barang di JTextField atau JLabel sesuai kebutuhan
            txt_kode.setText(barcode);
            txt_nama.setText(informasiBarang[0]);
            txt_harga.setText(informasiBarang[1]);
        } else {
            // Barang tidak ditemukan, atur JTextField atau JLabel ke nilai default atau kosong
            txt_kode .setText("");
            txt_nama.setText("");
            txt_harga.setText("");
        }
    } else {
        // Jika teks pencarian kosong, atur JTextField atau JLabel ke nilai default atau kosong
        txt_kode.setText("");
        txt_nama.setText("");
        txt_harga.setText("");
    }
    }

    private String[] cariInformasiBarangDariDatabase(String kodeBarang) {
        // Lakukan koneksi ke database dan eksekusi query
        try (Connection connection = koneksi.getConnection()) {
            String query = "SELECT nama_barang, harga_jual FROM barang WHERE kode_barang = ?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setString(1, kodeBarang);

                ResultSet resultSet = preparedStatement.executeQuery();

                if (resultSet.next()) {
                    return new String[]{resultSet.getString("nama_barang"), resultSet.getString("harga_jual")};
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }
}
